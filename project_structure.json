{
  "project_type": "NestJS",
  "root": "/mnt/c/Users/alex-dev/Documents/DEV/ethereum-key-vault",
  "main_dirs": [
    "src"
  ],
  "main_files": [
    "src/app.module.ts",
    "src/auth/google.strategy.ts",
    "src/auth/jwt.strategy.ts",
    "src/auth/local.strategy.ts",
    "src/config.ts",
    "src/config/database.config.ts",
    "src/config/datasource.ts",
    "src/config/vault.config.ts",
    "src/controllers/auth.controller.spec.ts",
    "src/controllers/auth.controller.ts",
    "src/controllers/ethereum.controller.spec.ts",
    "src/controllers/ethereum.controller.ts",
    "src/controllers/users.controller.spec.ts",
    "src/controllers/users.controller.ts",
    "src/decorators/get-user.decorator.ts",
    "src/dto/create-user.dto.ts",
    "src/dto/login-user.dto.ts",
    "src/dto/transfer.dto.ts",
    "src/entities/transaction.entity.ts",
    "src/entities/user.entity.ts"
  ],
  "dependencies": [
    "@eslint/js",
    "@nestjs/cli",
    "@nestjs/common",
    "@nestjs/config",
    "@nestjs/core",
    "@nestjs/jwt",
    "@nestjs/passport",
    "@nestjs/platform-express",
    "@nestjs/swagger",
    "@nestjs/testing",
    "@nestjs/typeorm",
    "@polkadot/util-crypto",
    "@types/express",
    "@types/jest",
    "@types/morgan",
    "@types/node",
    "@types/passport-google-oauth20",
    "@types/passport-jwt",
    "@types/supertest",
    "@typescript-eslint/eslint-plugin",
    "@typescript-eslint/parser",
    "argon2",
    "class-transformer",
    "class-validator",
    "concurrently",
    "cookie-parser",
    "dotenv",
    "eslint",
    "eslint-config-prettier",
    "eslint-plugin-prettier",
    "ethers",
    "express",
    "globals",
    "husky",
    "jest",
    "lint-staged",
    "morgan",
    "node-vault",
    "passport",
    "passport-google-oauth20",
    "passport-jwt",
    "passport-local",
    "pg",
    "prettier",
    "reflect-metadata",
    "rxjs",
    "supertest",
    "swagger-ui-express",
    "ts-jest",
    "ts-loader",
    "ts-node",
    "ts-node-dev",
    "tsconfig-paths",
    "typeorm",
    "typescript"
  ],
  "docker": {
    "compose_file": "docker-compose.yml",
    "services": [
      "postgres",
      "vault"
    ]
  }
}