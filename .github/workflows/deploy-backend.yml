name: Deploy Backend to GitLab Registry

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      IMAGE: registry.gitlab.com/store_images/docker-images/ethereum-key-vault
      TAG_SHA: ${{ github.sha }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Setup PNPM
        uses: pnpm/action-setup@v3
        with:
          version: 10.8.1
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        run: echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: Cache pnpm store
        uses: actions/cache@v4
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install & build
        run: |
          pnpm install
          pnpm lint
          # pnpm test
          pnpm build

      - name: Create .env.production
        run: |
          cat > .env.production << EOF
            NODE_ENV=production
            PORT=5000
            LOG_LEVEL=${{ secrets.LOG_LEVEL }}

            POSTGRES_HOST=${{ secrets.POSTGRES_HOST }}
            POSTGRES_PORT=${{ secrets.POSTGRES_PORT }}
            POSTGRES_USER=${{ secrets.POSTGRES_USER }}
            POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}
            POSTGRES_DB=${{ secrets.POSTGRES_DB }}

            VAULT_ENDPOINT=${{ secrets.VAULT_ENDPOINT }}
            VAULT_TOKEN=${{ secrets.VAULT_TOKEN }}

            JWT_SECRET=${{ secrets.JWT_SECRET }}
            GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }}
            GOOGLE_CLIENT_SECRET=${{ secrets.GOOGLE_CLIENT_SECRET }}
            GOOGLE_CALLBACK_URL=${{ secrets.GOOGLE_CALLBACK_URL }}
            FRONTEND_URL=${{ secrets.FRONTEND_URL }}
            VITE_AUTH_API_URL=${{ secrets.VITE_AUTH_API_URL }}

            ETHEREUM_RPC_URL=${{ secrets.ETHEREUM_RPC_URL }}
            SUBSTRATE_RPC_URL=${{ secrets.SUBSTRATE_RPC_URL }}
            SUBSTRATE_SS58_PREFIX=${{ secrets.SUBSTRATE_SS58_PREFIX }}
          EOF

      - name: Build Docker image
        run: |
          docker build \
            --build-arg NODE_ENV=production \
            -t $IMAGE:latest .
          docker tag $IMAGE:latest $IMAGE:$TAG_SHA

      - name: Login to GitLab Registry
        uses: docker/login-action@v3
        with:
          registry: registry.gitlab.com
          username: ${{ secrets.GITLAB_USER }}
          password: ${{ secrets.GITLAB_TOKEN }}

      - name: Push images
        run: |
          docker push $IMAGE:latest
          docker push $IMAGE:$TAG_SHA

      - name: Deploy to server via SSH
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          port: ${{ secrets.SERVER_PORT || '22' }}
          script: |
            set -e
            cd ~/backend

            # Backup old env and generate new one
            mv .env.production .env.production.bak || true
            cat > .env.production << EOF
              NODE_ENV=production
              PORT=5000
              LOG_LEVEL=${{ secrets.LOG_LEVEL }}

              POSTGRES_HOST=${{ secrets.POSTGRES_HOST }}
              POSTGRES_PORT=${{ secrets.POSTGRES_PORT }}
              POSTGRES_USER=${{ secrets.POSTGRES_USER }}
              POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}
              POSTGRES_DB=${{ secrets.POSTGRES_DB }}

              VAULT_ENDPOINT=${{ secrets.VAULT_ENDPOINT }}
              VAULT_TOKEN=${{ secrets.VAULT_TOKEN }}

              JWT_SECRET=${{ secrets.JWT_SECRET }}
              GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }}
              GOOGLE_CLIENT_SECRET=${{ secrets.GOOGLE_CLIENT_SECRET }}
              GOOGLE_CALLBACK_URL=${{ secrets.GOOGLE_CALLBACK_URL }}
              FRONTEND_URL=${{ secrets.FRONTEND_URL }}
              VITE_AUTH_API_URL=${{ secrets.VITE_AUTH_API_URL }}

              ETHEREUM_RPC_URL=${{ secrets.ETHEREUM_RPC_URL }}
              SUBSTRATE_RPC_URL=${{ secrets.SUBSTRATE_RPC_URL }}
              SUBSTRATE_SS58_PREFIX=${{ secrets.SUBSTRATE_SS58_PREFIX }}
            EOF

            # Authenticate against GitLab Registry
            docker login -u ${{ secrets.GITLAB_USER }} -p ${{ secrets.GITLAB_TOKEN }} registry.gitlab.com

            # Pull and restart backend services
            docker-compose -f docker-compose.backend.yml pull postgres-backend app
            docker-compose -f docker-compose.backend.yml up -d
