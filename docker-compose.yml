

services:
  postgres:
    image: postgres:15
    container_name: postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-ethereum_key_vault}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 10
    restart: unless-stopped
    networks:
      - app-network

  vault:
    image: hashicorp/vault:latest
    container_name: vault
    cap_add: [IPC_LOCK]
    ports:
      - "8200:8200"
    environment:
      VAULT_DEV_ROOT_TOKEN_ID: dev-only-token
      VAULT_DEV_LISTEN_ADDRESS: "0.0.0.0:8200"
      VAULT_TOKEN: dev-only-token
      VAULT_ADDR: "http://127.0.0.1:8200"

    command: vault server -dev
    healthcheck:
      test: ["CMD-SHELL", "vault status -address=$$VAULT_ADDR"]
      interval: 5s
      timeout: 3s
      retries: 5
      start_period: 5s
    restart: unless-stopped
    networks:
      - app-network

  vault-init:
    image: hashicorp/vault:latest
    depends_on:
      vault:
        condition: service_healthy
    entrypoint:
      - sh
      - -c
      - |
        sleep 5
        export VAULT_ADDR=http://vault:8200
        export VAULT_TOKEN=dev-only-token
        vault secrets disable secret/ || true
        vault secrets enable -path=secret -version=2 kv
    restart: "no"
    networks:
      - app-network

volumes:
  postgres_data:

networks:
  app-network:
    driver: bridge
